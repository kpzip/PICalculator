//===-- PIC16ISelDAGToDAG.cpp - A dag to dag inst selector for PIC16 ------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source 
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file defines an instruction selector for the PIC16 target.
//
//===----------------------------------------------------------------------===//

#define DEBUG_TYPE "pic16-isel"

#include "PIC16.h"
#include "PIC16RegisterInfo.h"
#include "PIC16TargetMachine.h"
#include "PIC16MachineFunctionInfo.h"
#include "llvm/CodeGen/SelectionDAGISel.h"
#include "llvm/Support/Compiler.h"
#include "llvm/Support/raw_ostream.h"
#include "llvm/Support/Debug.h"
#include "llvm/IR/Intrinsics.h"
using namespace llvm;

namespace {

class LLVM_LIBRARY_VISIBILITY PIC16DAGToDAGISel : public SelectionDAGISel {

  /// TM - Keep a reference to PIC16TargetMachine.
  const PIC16TargetMachine &TM;

  /// PIC16Lowering - This object fully describes how to lower LLVM code to an
  /// PIC16-specific SelectionDAG.
  const PIC16TargetLowering &PIC16Lowering;

public:
  explicit PIC16DAGToDAGISel(PIC16TargetMachine &tm, CodeGenOptLevel OptLevel) :
        SelectionDAGISel(tm, OptLevel),
        TM(tm), PIC16Lowering(*TM.getTargetLowering()) {}
  
  // Pass Name
  virtual StringRef getPassName() const {
    return "PIC16 DAG->DAG Pattern Instruction Selection";
  } 

private:
  
  // Include the pieces autogenerated from the target description.
#include "PIC16GenDAGISel.inc"

  void Select(SDNode *N);

  // Match direct address complex pattern.
  //bool SelectDirectAddr(SDNode *Op, SDValue N, SDValue &Address);
  bool SelectDirectAddr(SDValue &N, SDValue &Address); // HACK

};

class PIC16DAGToDAGISelLegacy : public SelectionDAGISelLegacy {
public:
  static char ID;
  PIC16DAGToDAGISelLegacy(PIC16TargetMachine &TM, CodeGenOptLevel OptLevel)
      : SelectionDAGISelLegacy(
            ID, std::make_unique<PIC16DAGToDAGISel>(TM, OptLevel)) {}
};

char PIC16DAGToDAGISelLegacy::ID = 0;

}

